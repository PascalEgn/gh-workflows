name: Tag images with custom tag
description: |
  Tags existing container images with a custom tag and pushes them to a registry.

inputs:
  images:
    description: Images to tag (one per line)
    required: true
  tag:
    description: The tag to apply (e.g., qa, staging, prod)
    required: true
  registry:
    description: The registry URL to push the images to (e.g., registry.cern.ch, docker.io).
    required: false
  registry-username:
    description: Username for registry login
    required: true
  registry-password:
    description: Password/token for registry login
    required: true

runs:
  using: "composite"
  steps:
    - name: Login to registry
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry || 'docker.io' }}
        username: ${{ inputs.registry-username }}
        password: ${{ inputs.registry-password }}

    - name: Tag and push images
      shell: bash
      run: |
        TAG="${{ inputs.tag }}"
        echo "${{ inputs.images }}" | while IFS= read -r image; do
          [[ -z "$image" ]] && continue
          image=$(echo "$image" | xargs)
          if [[ $image =~ ^(.+)@sha256:.*$ ]]; then
            base_image="${BASH_REMATCH[1]}"
          elif [[ $image =~ ^(.+):.*$ ]]; then
            base_image="${BASH_REMATCH[1]}"
          else
            base_image="$image"
          fi
          echo "Tagging $image as $base_image:$TAG"
          if ! docker pull "$image"; then
            echo "Error: Failed to pull $image"
            exit 1
          fi
          docker tag "$image" "$base_image:$TAG"
          if ! docker push "$base_image:$TAG"; then
            echo "Error: Failed to push $base_image:$TAG"
            exit 1
          fi
          
          echo "Successfully tagged and pushed $base_image:$TAG"
        done
