name: "Build Docker Image"

inputs:
  image:
    required: true
  context:
    required: false
    default: "."
  tags:
    required: false
  registry:
    required: false
  username:
    required: true
  password:
    required: true
  stage:
    required: false
  dockerfile:
    required: false
  cache:
    required: false
    default: true
  build-args:
    required: false
  platforms:
    required: false

outputs:
  image-id:
    description: The ID of the image that was built
    value: ${{ steps.cached.outputs.imageid || steps.uncached.outputs.imageid }}
  image-digest:
    description: The Digest of the image that was built
    value: ${{ steps.cached.outputs.digest || steps.uncached.outputs.digest }}
  image-tags:
    description: List of tags generated
    value: ${{ steps.meta.outputs.tags }}
  image-version:
    description: The version of the image
    value: ${{ steps.meta.outputs.version }}
  image-labels:
    description: The labels of the image
    value: ${{ steps.meta.outputs.labels }}
  metadata:
    description: The Digest of the image that was built
    value: ${{ steps.cached.outputs.metadata || steps.uncached.outputs.metadata }}

runs:
  using: "composite"
  steps:
    - name: Set up Docker
      uses: cern-sis/gh-workflows/.github/actions/docker-setup@v4.0.0

    - name: Generate image name
      id: generate
      shell: bash
      run: echo "image=${{ inputs.registry }}${{ inputs.registry && '/' }}${{ inputs.image }}" >>$GITHUB_OUTPUT

    - name: Generate metadata
      id: meta
      uses: docker/metadata-action@v4
      env:
        DOCKER_METADATA_PR_HEAD_SHA: true
      with:
        images: ${{ steps.generate.outputs.image }}
        tags: |
          type=sha
          ${{ inputs.tags }}

    - name: Login
      uses: docker/login-action@v2
      with:
        registry: ${{ inputs.registry || 'docker.io' }}
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}

    - name: Build and export
      id: cached
      if: ${{ inputs.cache == 'true' }}
      uses: docker/build-push-action@v4
      with:
        context: ${{ inputs.context }}
        target: ${{ inputs.stage }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        cache-from: type=registry,ref=${{ steps.generate.outputs.image }}:buildcache
        cache-to: type=registry,ref=${{ steps.generate.outputs.image }}:buildcache,mode=max
        file: ${{ inputs.dockerfile }}
        build-args: ${{ inputs.build-args }}
        platforms: ${{ inputs.platforms }}

    - name: Build and export
      id: uncached
      if: ${{ inputs.cache == 'false'}}
      uses: docker/build-push-action@v4
      with:
        context: ${{ inputs.context }}
        target: ${{ inputs.stage }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        no-cache: true
        file: ${{ inputs.dockerfile }}
        build-args: ${{ inputs.build-args }}
        platforms: ${{ inputs.platforms }}
